api:
  enabled: false
sources:
  internal_logs:
    type: internal_logs
  internal_metrics:
    type: internal_metrics

transforms:
  component_labeler:
    type: remap
    inputs:
      - internal_metrics
    source: |
      # Only process metrics that are sources or sinks
      if .tags.component_kind != "source" && .tags.component_kind != "sink" {
        abort "Skipping non-source or non-sink component"
      }

      # Split component_id into parts
      parts = split!(.tags.component_id, ":")

      # Only process if we have at least 2 parts
      if length(parts) != 2 {
        abort "Skipping component with invalid component_id"
      }

      log(parts, level: "debug", rate_limit_secs: 0)

      # First part is always the export policy UID
      .tags.export_policy_uid = parts[0]

        # Add source_name or sink_name based on component type
      if .tags.component_kind == "source" {
        .tags.source_name = parts[1]
      } else if .tags.component_kind == "sink" {
        .tags.sink_name = parts[1]
      }

sinks:
  console:
    type: console
    inputs:
      - internal_logs
    encoding:
      codec: json

  prometheus_export:
    type: prometheus_exporter
    inputs:
      - component_labeler
    address: 0.0.0.0:9598
